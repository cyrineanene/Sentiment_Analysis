# version: '3.8'

# services:
#   zookeeper:
#     image: wurstmeister/zookeeper:latest
#     container_name: zookeeper
#     ports:
#       - "2181:2181"
#     environment:
#       ZOOKEEPER_CLIENT_PORT: 2181
#       ZOOKEEPER_TICK_TIME: 2000
#     volumes:
#       - zookeeper-data:/data
#     networks:
#       - kafka-network

#   kafka:
#     build: .
#     container_name: kafka
#     ports:
#       - "9092:9092"
#     environment:
#       KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
#       KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT
#       KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
#       KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
#       KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
#     volumes:
#       - kafka-data:/var/lib/kafka/data
#     depends_on:
#       - zookeeper
#     networks:
#       - kafka-network

# volumes:
#   zookeeper-data:
#   kafka-data:

# networks:
#   kafka-network:
#     driver: bridge





version: '3.8'
services:
  zookeeper:
      container_name: zookeeper-cntr
      restart: always
      image: docker.io/bitnami/zookeeper:3.8
      ports:
        - "2181:2181"
      environment:
        - ALLOW_ANONYMOUS_LOGIN=yes 
      networks:
        - books_network

  kafka:
      container_name: kafka-cntr
      restart: always
      image: docker.io/bitnami/kafka:3.3
      ports:
        - "9093:9093"
      environment:
        - KAFKA_BROKER_ID=1
        - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181  
        - ALLOW_PLAINTEXT_LISTENER=yes 
        - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CLIENT:PLAINTEXT,EXTERNAL:PLAINTEXT 
        - KAFKA_CFG_LISTENERS=CLIENT://:9092,EXTERNAL://:9093 
        - KAFKA_CFG_ADVERTISED_LISTENERS=CLIENT://kafka:9092,EXTERNAL://localhost:9093 
        - KAFKA_CFG_INTER_BROKER_LISTENER_NAME=CLIENT  
      depends_on:
        - zookeeper
      networks:
        - books_network

  python_scripts:
    container_name: python_scripts
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "4000:80"
    networks:
      - books_network


networks:
  books_network:
    driver: bridge 